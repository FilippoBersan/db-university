-QUERY CON GROUP BY 


1. Contare quanti iscritti ci sono stati ogni anno

SELECT COUNT(`id`) AS `numero_studenti`, YEAR(`enrolment_date`) AS `anno_iscrizione`
FROM `students`
GROUP BY YEAR(`enrolment_date`);


2. Contare gli insegnanti che hanno lufficio nello stesso edificio

SELECT COUNT(`id`) AS `numero_insegnanti`,(`office_address`) AS `nome_edificio`
FROM `teachers`
GROUP BY (`office_address`);


3. Calcolare la media dei voti di ogni appello desame

SELECT (`exam_id`) AS `id_esame`,AVG(`vote`) AS `media_voto`
FROM `exam_student`
GROUP BY (`exam_id`);


4. Contare quanti corsi di laurea ci sono per ogni dipartimento

SELECT COUNT(`id`) AS `id_corsi`,(`department_id`) AS `id_edificio`
FROM `degrees`
GROUP BY (`department_id`);



-QUERY CON JOIN


1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia

SELECT *
FROM `degrees`
INNER JOIN `students`
ON `degrees`.`id` = `students`.`degree_id`
WHERE `degrees`.`name` = "Corso di Laurea in Economia";


2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze

SELECT *
FROM `degrees`
INNER JOIN `departments`
ON `degrees`.`department_id` = `departments`.`id`
WHERE `degrees`.`level` = "magistrale" AND `departments`.`name` = "Dipartimento di Neuroscienze";

3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)

SELECT *

FROM
    `teachers`
INNER JOIN `course_teacher`
ON
    `teachers`.`id` = `course_teacher`.`teacher_id`
INNER JOIN `courses`
ON
    `course_teacher`. `course_id` =     `courses`.`id`
WHERE
 `teachers`.`id` = 44;






4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e nome


SELECT * 
FROM 
    `students`
INNER JOIN 
   `degrees`  
   ON
    `students`. `degree_id` =  `degrees`. `id`

    INNER JOIN 
   `departments`  
   ON
    `degrees`. `department_id` =  `departments`. `id`

--da correggere




 5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti

  SELECT *
FROM `degrees`
LEFT JOIN `courses`
ON 
`degrees`.`id` = `courses`.`degree_id`
INNER JOIN `course_teacher`
ON 
`courses`.`id` = `course_teacher`.`degree_id`

WHERE `departments`.`name` = "Dipartimento di Matematica";

--da correggere



6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)

 SELECT *
FROM `teachers`.`id`,`teachers`.`surname`,`teachers`.`name`,`departments`.`name`
INNER JOIN `course_teacher`
ON `teachers`.`id` = `course_teacher`.`teacher_id`
INNER JOIN `courses`
ON`course_teacher`.`course_id` = `courses`.`id`
INNER JOIN `degrees`
ON`courses`.`degree_id` = `degrees`.`id`
INNER JOIN `departments`
ON`degrees`.`department_id` = `departments`.`id`
GROUP BY `teachers`.`id`

WHERE `departments`.`name` = "Dipartimento di Matematica"
ORDER BY `teachers`.`surname`,`teachers`.`name`;

--da correggere

7. BONUS: Selezionare per ogni studente il numero di tentativi sostenuti per ogni esame, stampando anche il voto massimo. Successivamente, filtrare i tentativi con voto minimo 18.

--corretto

SELECT
    students.id,
    students.name,
    students.surname,
    courses.name,
    COUNT(exam_student.vote) AS `numero_tentativi`,
   MAX(exam_student.vote) AS `voto_massimo`,
   MIN(exam_student.vote) AS `voto_minimo`
FROM
    `students`
INNER JOIN `exam_student` ON `students`.`id` = `exam_student`.`student_id`
INNER JOIN `exams` ON `exam_student`.`exam_id` = `exams`.`id`
INNER JOIN `courses` ON `exams`.`course_id` = `courses`.id
GROUP BY
    students.id,
    courses.id
HAVING `voto_minimo` > 18

